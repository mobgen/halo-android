apply plugin: 'groovy'
apply plugin: 'grill'

/**
 * Minimum plugin compatibility for java 7
 */
targetCompatibility = JavaVersion.VERSION_1_7
sourceCompatibility = JavaVersion.VERSION_1_7

/**
 * jcenter dependency for android build tools.
 */
repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:2.2.3'
    compile 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    compile 'com.google.gms:google-services:3.0.0'
}

/**
 * Distribution
 */
group = rootProject.ext.haloGroup
version = rootProject.ext.haloVersion
description = 'Contains the halo plugin to manage the dependencies and configuration of halo in an application.'

def googleVersion = rootProject.ext.firebaseVersion
def facebookVersion = rootProject.ext.facebookSdkVersion

task sourcesJar(type: Jar) {
    from sourceSets.main.groovy.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    from groovydoc.destinationDir
    classifier = 'javadoc'
}

grill {
    distribute {
        libName 'HALO Plugin'
        libDescription 'This plugin helps on the configuration of the SDK.'
        libDevId "halo-mobgen"
        libDevName "MOBGEN"
        libDevEmail "halo@mobgen.com"
        libSiteUrl "https://halo.mobgen.com"
        libGitUrl "https://bitbucket.org/mobgen/halo-android/sdk/halo-plugin"
        bintrayRepoName "HALO"
        bintrayUser "${rootProject.ext.jcenterUser}"
        bintrayKey "${rootProject.ext.jcenterKey}"
        bintrayMavenCentralUser "${rootProject.ext.sonatypeUser}"
        bintrayMavenCentralPassword "${rootProject.ext.sonatypePassword}"
        bintrayArtifactJavadoc project.tasks.getByName("javadocJar")
        bintrayArtifactSources project.tasks.getByName("sourcesJar")
        bintrayMavenSync project.hasProperty("sync")
    }
    documentation {
        templateDir "/../docs/template"
    }
    coverage {}
}

/**
 * Version code generation
 */
import org.apache.tools.ant.filters.ReplaceTokens

task generateVersionClass(type: Copy) {
    from 'src/main/templates/Version.java'
    into 'build/generated-src/main/java/com/mobgen/halo/android/gradle'
    filter(ReplaceTokens, tokens: [version: version.toString(), googleVersion: googleVersion.toString(), facebookVersion: facebookVersion.toString()])
    outputs.upToDateWhen { false }
}

compileJava.dependsOn generateVersionClass

sourceSets {
    main {
        java {
            srcDir 'build/generated-src/main/java'
        }
    }
}